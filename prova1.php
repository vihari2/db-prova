<?php
#CRIAR AS TABELAS 

CREATE TABLE CLIENTES (
    IDCLIENTE INT NOT NULL AUTO_INCREMENT, 
    NOME VARCHAR(50) NOT NULL,
    RG CHAR(9) NOT NULL,
    CPF CHAR(11) NOT NULL,
    DATA_NASC DATE NOT NULL, 
    SEXO CHAR(1) NOT NULL,
    CIDADE VARCHAR(255) NOT NULL,
    FAIXASALARIALMIN INIT NOT NULL,
    NOMEDAMAE VARCHAR (50) NOT NULL
    PRIMARY KEY (IDCLIENTE),
);


CREATE TABLE PRODUTOS (
    IDPRODUTO INT NOT NULLL AUTO_INCREMENT, 
    NOME VARCHAR(255) NOT NULL,
    VALOR DECIMAL (10,2) NOT NULL, 
    PRIMARY KEY (IDPRODUTO),
    FOREGIN KEY (IDTIPO) REFERENCES TIPO(IDTIPO)
)


CREATE TABLE TIPO (
    IDTIPO INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(255) NOT NULL,
    PRIMARY KEY (IDTIPO)
)


CRATE TABLE NOTA_FISCAL (
    IDNOTA_FISCAL INT NOT NULL AUTO_INCREMENT, 
    DESCRICAO VARCHAR(255) NOT NULL,
    PRIMARY KEY (IDNOTA_FISCAL),
    FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTES(IDCLIENTE)
)

CREATE TABLE ITENSNF (
    IDITENSNF INT NOT NULL AUTO_INCREMENT, 
    QUANTIDADE INT NOT NULL,
    PRIMARY KEY (IDITENSNF),  
    FOREIGN KEY (IDNOTA_FISCAL) REFERENCES NOTA_FISCAL(IDNOTA_FISCAL),
    FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTOS(IDPRODUTO) 
)

#INSERIR DADOS NAS TABELAS

INSERT INTO TIPO (NOME) VALUES ('LIMPEZA'); 
INSERT INTO TIPO (NOME) VALUES ('HIGIENE');
INSERT INTO TIPO (NOME) VALUES ('LATICINIOS');
INSERT INTO TIPO (NOME) VALUES ('FARINHA'); 
INSERT INTO TIPO (NOME) VALUES ("CEREAL"); 
INSERT INTO TIPO (NOME) VALUES ('FRUTAS');
INSERT INTO TIPO (NOME) VALUES ('VERDURAS'); 

#ADICIONAR UMA COLUNA EM UMA TABELA
ALTER TABLE table_name
ADD column_name datatype;

ALTER TABLE CLIENTES 
ADD EMAIL INT NOT NULL;

#DELETAR UM BANCODEDADOS 
DROP DATABASE nome_do_banco;
#DELETAR UMA TABELA
DROP TABLE nome_da_tabela;

#SQL QUE MOSTRE OS PRODUTOS E SEUS TIPOS 
SELECT P.NOME AS PRODUTO, T.NOME AS TIPO
FROM PRODUTO P 
JOIN TIPO T ON P.IDTIPO = T.IDTIPO;

SELECT professor.nome, especialização.nome 
FROM professor 
inner join especialização on (professor.especialização = especialização.cod);

#INNER JOIN É A INSERÇÃO DE UMA TABELA DENTRO DE OUTRA TABELA inner join é a inserção de uma tabela dentro de outra tabela 
SELECT column_name(s)
FROM table1
INNER JOIN table2
ON table1.column_name = table2.column_name;

SELECT *
FROM PRODUTOS
INNER JOIN TIPO
ON PRODUTOS.IDTIPO = TIPO.IDTIPO;


#LEFT JOIN 
SELECT column_name(s)
FROM table1
LEFT JOIN table2
ON table1.column_name = table2.column_name;

#UNION 
SELECT column_name(s) FROM table1
UNION
SELECT column_name(s) FROM table2;


#WHERE -> #SELECT, UPDATE ou DELETE  

SELECT * FROM CLIENTES WHERE IDCLIENTE = 1;
DELETE FROM CLIENTES WHERE IDCLIENTE = 1;
UPDATE CLIENTES SET NOME = 'JOAO' WHERE IDCLIENTE = 1;
SELECT * FROM CLIENTES WHERE NOME = 'JOAO';
SELECT * FROM CLIENTES WHERE NOME LIKE 'JOAO%';
UPDATE TIPO SET NOME = 'LIMPEZA' WHERE IDTIPO = 1;
SELECT * FROM TIPO WHERE NOME = 'LIMPEZA';

#COUNT(), MAX(), MIN(), SUM() e AVG() 

SELECT COUNT(*) FROM CLIENTES;
SELECT COUNT(*) FROM clientes WHERE pais = 'Brasil';
// Retorna o valor máximo de uma coluna em uma tabela. Por exemplo:
SELECT MAX(IDCLIENTE) FROM CLIENTES;
// Retorna o valor mínimo de uma coluna em uma tabela. Por exemplo:
SELECT MIN(IDCLIENTE) FROM CLIENTES;
// Retorna a soma dos valores em uma coluna em uma tabela
SELECT SUM(IDCLIENTE) FROM CLIENTES;
// Retorna a média dos valores em uma coluna em uma tabela. Por exemplo:
SELECT AVG(IDCLIENTE) FROM CLIENTES;
SELECT AVG(NOTA) FROM ALUNOS;

#GROUP BY  -> #SELECT, UPDATE ou DELETE
SELECT COUNT(CustomerID), Country
FROM Customers
GROUP BY Country;

?> 




